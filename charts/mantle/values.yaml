replicaCount: 1

image:
  repository: ghcr.io/cybozu-go/mantle
  pullPolicy:
  tag: # {{ .Chart.AppVersion }}

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: "mantle-controller"

annotations: {}
labels: {}
podAnnotations: {}
podLabels: {}
resources: {}
nodeSelector: {}
tolerations: []
affinity: {}

controller:
  role: standalone
  ports: []
  env: []
  mtls:
    # controller.mtls.serverCACertConfigMap â€“- ConfigMap name containing the CA certificate for server mTLS. Only used when the role is primary.
    serverCACertConfigMap: ""
    # controller.mtls.clientTLSSecret -- TLS secret name containing the client certificate and key for mTLS. Only used when the role is primary.
    clientTLSSecret: ""

    # controller.mtls.clientCACertConfigMap -- ConfigMap name containing the CA certificate for client mTLS. Only used when the role is secondary.
    clientCACertConfigMap: ""
    # controller.mtls.serverTLSSecret -- TLS secret name containing the server certificate and key for mTLS.  Only used when the role is secondary.
    serverTLSSecret: ""

replicationService:
  # type:
  # port:
  # targetPort:

webhook:
  # webhook.enabled -- If true and role is secondary, Deploying a webhook to prevent Pods from mounting PVCs created by Mantle.
  # When deploying multiple Mantle instances, Set the value to `true` on only a single instance.
  enabled: true
  service:
    # webhook.service.port -- Port for the webhook service. 
    port: 9443
    # webhook.service.targetPort -- Target port for the webhook server pod.
    targetPort: 9443
  certificate:
    # webhook.certificate.managedBy -- Can be "cert-manager" or "helm".
    managedBy: cert-manager
    # webhook.certificate.dnsDomain -- Only used when managedBy is "helm". Cluster DNS domain (required for requesting TLS certificates).
    dnsDomain: cluster.local
    # webhook.certificate.existingCertManagerIssuer -- Only used when managedBy is "cert-manager". Specify the cert-manager issuer to be used for AdmissionWebhook.
    existingCertManagerIssuer: {}
      # group: cert-manager.io
      # kind: Issuer
      # name: webhook-issuer
